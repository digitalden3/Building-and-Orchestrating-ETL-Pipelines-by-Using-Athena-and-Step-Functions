Comment: A description of my state machine
StartAt: Create Glue DB
States:
  Create Glue DB:
    Type: Task
    Resource: arn:aws:states:::athena:startQueryExecution.sync
    Parameters:
      QueryString: CREATE DATABASE if not exists nyctaxidb
      WorkGroup: primary
      ResultConfiguration:
        OutputLocation: s3://gluelab--543f17a0/athena/
    Next: Run Table Lookup
  Run Table Lookup:
    Type: Task
    Resource: arn:aws:states:::athena:startQueryExecution.sync
    Parameters:
      QueryString: show tables in nyctaxidb
      WorkGroup: primary
      ResultConfiguration:
        OutputLocation: s3://gluelab--543f17a0/athena/
    Next: Get lookup query results
  Get lookup query results:
    Type: Task
    Resource: arn:aws:states:::athena:getQueryResults
    Parameters:
      QueryExecutionId.$: $.QueryExecution.QueryExecutionId
    Next: ChoiceStateFirstRun
  ChoiceStateFirstRun:
    Type: Choice
    Choices:
      - Not:
          Variable: $.ResultSet.Rows[0].Data[0].VarCharValue
          IsPresent: true
        Next: Run Create data Table Query
    Default: Check All Tables
  Run Create data Table Query:
    Type: Task
    Resource: arn:aws:states:::athena:startQueryExecution.sync
    Parameters:
      QueryString: >-
        CREATE EXTERNAL TABLE nyctaxidb.yellowtaxi_data_csv(  vendorid bigint,  
        tpep_pickup_datetime string,   tpep_dropoff_datetime string,  
        passenger_count bigint,   trip_distance double,   ratecodeid bigint,  
        store_and_fwd_flag string,   pulocationid bigint,   dolocationid
        bigint,   payment_type bigint,   fare_amount double,   extra double,  
        mta_tax double,   tip_amount double,   tolls_amount double,  
        improvement_surcharge double,   total_amount double,  
        congestion_surcharge double) ROW FORMAT DELIMITED   FIELDS TERMINATED BY
        ',' STORED AS INPUTFORMAT   'org.apache.hadoop.mapred.TextInputFormat'
        OUTPUTFORMAT  
        'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat' LOCATION 
        's3://gluelab--543f17a0/nyctaxidata/data/' TBLPROPERTIES ( 
        'skip.header.line.count'='1')
      WorkGroup: primary
      ResultConfiguration:
        OutputLocation: s3://gluelab--543f17a0/athena/
    Next: Run Create lookup Table Query
  Run Create lookup Table Query:
    Type: Task
    Resource: arn:aws:states:::athena:startQueryExecution.sync
    Parameters:
      QueryString: >-
        CREATE EXTERNAL TABLE nyctaxidb.nyctaxi_lookup_csv(  locationid
        bigint,   borough string,   zone string,   service_zone string,  
        latitude double,   longitude double)ROW FORMAT DELIMITED   FIELDS
        TERMINATED BY ',' STORED AS INPUTFORMAT  
        'org.apache.hadoop.mapred.TextInputFormat' OUTPUTFORMAT  
        'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'LOCATION 
        's3://gluelab--543f17a0/nyctaxidata/lookup/' TBLPROPERTIES ( 
        'skip.header.line.count'='1')
      WorkGroup: primary
      ResultConfiguration:
        OutputLocation: s3://gluelab--543f17a0/athena/
    Next: Run Create Parquet lookup Table Query
  Run Create Parquet lookup Table Query:
    Type: Task
    Resource: arn:aws:states:::athena:startQueryExecution.sync
    Parameters:
      QueryString: >-
        CREATE table if not exists nyctaxidb.nyctaxi_lookup_parquet WITH
        (format='PARQUET',parquet_compression='SNAPPY', external_location =
        's3://gluelab--543f17a0/nyctaxidata/optimized-data-lookup/') AS SELECT
        locationid, borough, zone , service_zone , latitude ,longitude  FROM
        nyctaxidb.nyctaxi_lookup_csv
      WorkGroup: primary
      ResultConfiguration:
        OutputLocation: s3://gluelab--543f17a0/athena/
    Next: Run Create Parquet data Table Query
  Run Create Parquet data Table Query:
    Type: Task
    Resource: arn:aws:states:::athena:startQueryExecution.sync
    Parameters:
      QueryString: >-
        CREATE table if not exists nyctaxidb.yellowtaxi_data_parquet WITH
        (format='PARQUET',parquet_compression='SNAPPY',partitioned_by=array['pickup_year','pickup_month'],external_location
        = 's3://gluelab--543f17a0/nyctaxidata/optimized-data/') AS SELECT
        vendorid,tpep_pickup_datetime,tpep_dropoff_datetime,passenger_count,trip_distance,ratecodeid,store_and_fwd_flag,pulocationid,dolocationid,fare_amount,extra,mta_tax,tip_amount,tolls_amount,improvement_surcharge,total_amount,congestion_surcharge,payment_type,substr("tpep_pickup_datetime",1,4)
        pickup_year, substr("tpep_pickup_datetime",6,2) AS pickup_month FROM
        nyctaxidb.yellowtaxi_data_csv where substr("tpep_pickup_datetime",1,4) =
        '2020' and substr("tpep_pickup_datetime",6,2) = '01'
      WorkGroup: primary
      ResultConfiguration:
        OutputLocation: s3://gluelab--543f17a0/athena/
    Next: Run Create View
  Run Create View:
    Type: Task
    Resource: arn:aws:states:::athena:startQueryExecution.sync
    Parameters:
      QueryString: >-
        create or replace view nyctaxidb.yellowtaxi_data_vw as select a.*,lkup.*
        from (select  datatab.pulocationid pickup_location ,pickup_month,
        pickup_year, sum(cast(datatab.total_amount AS decimal(10, 2))) AS
        sum_fare , sum(cast(datatab.trip_distance AS decimal(10, 2))) AS
        sum_trip_distance , count(*) AS countrec   FROM
        nyctaxidb.yellowtaxi_data_parquet datatab WHERE datatab.pulocationid is
        NOT null  GROUP BY  datatab.pulocationid, pickup_month, pickup_year) a ,
        nyctaxidb.nyctaxi_lookup_parquet lkup where lkup.locationid =
        a.pickup_location
      WorkGroup: primary
      ResultConfiguration:
        OutputLocation: s3://gluelab--543f17a0/athena/
    End: true
  Check All Tables:
    Type: Map
    ItemProcessor:
      ProcessorConfig:
        Mode: INLINE
      StartAt: CheckTable
      States:
        CheckTable:
          Type: Choice
          Choices:
            - Variable: $.Data[0].VarCharValue
              StringMatches: '*data_parquet'
              Next: Insert New Parquet Data
          Default: Ignore File
        Insert New Parquet Data:
          Type: Task
          Resource: arn:aws:states:::athena:startQueryExecution.sync
          Parameters:
            QueryString: >-
              INSERT INTO nyctaxidb.yellowtaxi_data_parquet select
              vendorid,tpep_pickup_datetime,tpep_dropoff_datetime,passenger_count,trip_distance,ratecodeid,store_and_fwd_flag,pulocationid,dolocationid,fare_amount,extra,mta_tax,tip_amount,tolls_amount,improvement_surcharge,total_amount,congestion_surcharge,payment_type,substr("tpep_pickup_datetime",1,4)
              pickup_year, substr("tpep_pickup_datetime",6,2) AS pickup_month
              FROM nyctaxidb.yellowtaxi_data_csv where
              substr("tpep_pickup_datetime",1,4) = '2020' and
              substr("tpep_pickup_datetime",6,2) = '02'
            WorkGroup: primary
            ResultConfiguration:
              OutputLocation: s3://gluelab--543f17a0/athena/
          End: true
        Ignore File:
          Type: Pass
          End: true
    End: true
    ItemsPath: $.Rows
    InputPath: $.ResultSet
